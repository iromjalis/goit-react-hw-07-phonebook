{"version":3,"sources":["redux/phonebook/phonebook-actions.js.js","redux/phonebook/phonebook-operations.js","components/ContactForm/ContactFormName.jsx","components/ContactForm/ContactFormNumber.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactList.container.js","components/Container/Container.jsx","components/Filter/Filter.jsx","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css"],"names":["addContactRequest","createAction","name","number","payload","id","shortid","generate","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","getContactRequest","getContactSuccess","getContactError","changeFilter","axios","defaults","baseURL","ContactFormName","title","onChange","value","nameInputId","htmlFor","TextField","label","variant","type","placeholder","pattern","required","ContactFormNumber","connect","contacts","phonebookContacts","dispatch","onSubmit","contact","post","then","response","data","catch","error","addContact","useState","setName","setNumber","numberInputId","handleChange","e","target","className","css","ContactFormWrapper","preventDefault","console","log","Button","ContactList","deleteContact","filter","onContactFetch","contactArr","normalizedFilter","toLowerCase","includes","getVisibleContacts","useEffect","s","map","onClick","phonebookFilter","delete","get","Container","children","ContainerWrapper","action","currentTarget","App","createReducer","state","_","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.216a49fc.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\nimport shortid from \"shortid\";\r\n\r\nconst addContactRequest = createAction(\r\n  \"contacts/addContactRequest\",\r\n  (name, number) => ({\r\n    payload: {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    },\r\n  })\r\n);\r\nconst addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nconst addContactError = createAction(\"contacts/addContactError\");\r\n\r\nconst deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\r\nconst deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\r\nconst deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nconst getContactRequest = createAction(\"contacts/getContactRequest\");\r\nconst getContactSuccess = createAction(\"contacts/getContactSuccess\");\r\nconst getContactError = createAction(\"contacts/getContactError\");\r\n\r\nconst changeFilter = createAction(\"phonebook/changeFilter\");\r\n\r\nexport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactError,\r\n  deleteContactSuccess,\r\n  deleteContactRequest,\r\n  getContactError,\r\n  getContactSuccess,\r\n  getContactRequest,\r\n  changeFilter,\r\n};\r\n","import {\r\n  addContactRequest,\r\n  addContactError,\r\n  addContactSuccess,\r\n  deleteContactError,\r\n  deleteContactSuccess,\r\n  deleteContactRequest,\r\n  getContactSuccess,\r\n  getContactRequest,\r\n  getContactError,\r\n} from \"./phonebook-actions.js\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4040/\";\r\nexport const addContact = (contact) => (dispatch) => {\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post(\"contacts\", contact)\r\n    .then((response) => dispatch(addContactSuccess(response.data)))\r\n    .catch((error) => dispatch(addContactError(error)));\r\n};\r\nexport const deleteContact = (id) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(\"contacts/\" + id)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactError(error)));\r\n};\r\nexport const contactFetch = () => (dispatch) => {\r\n  dispatch(getContactRequest());\r\n  axios\r\n    .get(\"contacts\")\r\n    .then((response) => dispatch(getContactSuccess(response.data)))\r\n    .catch((error) => dispatch(getContactError(error)));\r\n};\r\n","import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nconst ContactFormName = ({ title, onChange, value, nameInputId }) => {\r\n  return (\r\n    <>\r\n      <label htmlFor={nameInputId}>\r\n        {/* {title}&ensp; */}\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Name\"\r\n          variant=\"outlined\"\r\n          value={value}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          name={title}\r\n          placeholder={title}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactFormName;\r\n","import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nconst ContactFormNumber = ({ title, onChange, value }) => {\r\n  return (\r\n    <>\r\n      <label htmlFor=\"\">\r\n        {/* {title}&ensp; */}\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Number\"\r\n          variant=\"outlined\"\r\n          value={value}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          name={title}\r\n          placeholder={title}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactFormNumber;\r\n","import React, { useState } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/phonebook/phonebook-operations\";\r\n\r\nimport css from \"./ContactForm.module.css\";\r\nimport ContactFormName from \"./ContactFormName\";\r\nimport ContactFormNumber from \"./ContactFormNumber\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nfunction ContactForm({ contacts, onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  // onSetName={handleSetName}\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(name, number);\r\n    console.log(\"number: \", number);\r\n    console.log(\"name: \", name);\r\n\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={css.ContactFormWrapper} onSubmit={handleSubmit}>\r\n      <ContactFormName\r\n        nameInputId={nameInputId}\r\n        title=\"name\"\r\n        value={name}\r\n        onChange={handleChange}\r\n        className=\"FormName\"\r\n      />\r\n      <ContactFormNumber\r\n        numberInputId={numberInputId}\r\n        title=\"number\"\r\n        value={number}\r\n        onChange={handleChange}\r\n        className=\"FormNumber\"\r\n      />\r\n      <p>\r\n        <Button variant=\"outlined\" type=\"submit\">\r\n          Send\r\n        </Button>\r\n      </p>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ contacts: { phonebookContacts } }) =>\r\n  phonebookContacts;\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (contact) => dispatch(addContact(contact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React, { useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, deleteContact, filter, onContactFetch }) => {\r\n  const getVisibleContacts = (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n  const contactArr = getVisibleContacts(contacts, filter);\r\n\r\n  useEffect(() => {\r\n    onContactFetch();\r\n  }, [onContactFetch]);\r\n\r\n  return (\r\n    <>\r\n      <ul className={s.ContactList}>\r\n        {contactArr &&\r\n          contactArr.map(({ id, name, number }) => (\r\n            <li key={id}>\r\n              {name} {number}\r\n              &ensp;\r\n              <Button\r\n                variant=\"outlined\"\r\n                type=\"button\"\r\n                onClick={() => deleteContact(id)}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  deleteContact,\r\n  contactFetch,\r\n} from \"../../redux/phonebook/phonebook-operations\";\r\nimport ContactList from \"./ContactList\";\r\n\r\nconst mapStateToProps = ({\r\n  contacts: { phonebookContacts, phonebookFilter },\r\n}) => ({\r\n  contacts: phonebookContacts,\r\n  filter: phonebookFilter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteContact: (id) => dispatch(deleteContact(id)),\r\n  onContactFetch: () => dispatch(contactFetch()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./Container.module.css\";\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={css.ContainerWrapper}>{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/phonebook/phonebook-actions.js\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nconst Filter = ({ filter, changeFilter }) => {\r\n  return (\r\n    <form action=\"\">\r\n      <label htmlFor=\"\">\r\n        {/* <p> Find contacts by name</p> */}\r\n        <TextField\r\n          label=\"Find contacts by name...\"\r\n          variant=\"standard\"\r\n          placeholder=\"Find contacts by name...\"\r\n          onChange={(e) => changeFilter(e.currentTarget.value)}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"standard-basic\"\r\n          value={filter}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        />\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { filter } }) => ({ filter: filter });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeFilter: (value) => dispatch(changeFilter(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import \"./App.css\";\r\n//components\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport ContactList from \"./components/ContactList/ContactList.container\";\r\nimport Container from \"./components/Container/Container\";\r\nimport Filter from \"./components/Filter/Filter\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Container className=\"App\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2>Contacts:</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  addContactError,\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  deleteContactError,\r\n  deleteContactSuccess,\r\n  deleteContactRequest,\r\n  getContactError,\r\n  getContactSuccess,\r\n  getContactRequest,\r\n  changeFilter,\r\n} from \"./phonebook-actions.js\";\r\n\r\nconst phonebookContacts = createReducer([], {\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n  [getContactSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst phonebookFilter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactError]: () => false,\r\n  [addContactSuccess]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactError]: () => false,\r\n  [deleteContactSuccess]: () => false,\r\n  [getContactRequest]: () => true,\r\n  [getContactError]: () => false,\r\n  [getContactSuccess]: () => false,\r\n});\r\nexport default combineReducers({\r\n  phonebookContacts,\r\n  phonebookFilter,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./phonebook/phonebook-reducer\";\r\n\r\n// const ContactsPersistConfig = {\r\n//   key: \"contacts\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// export default { store, persistor };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBtn\":\"ContactForm_formBtn__2wwFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__wG-LO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContainerWrapper\":\"Container_ContainerWrapper__1bRx_\"};"],"sourceRoot":""}